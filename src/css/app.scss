// src/css/app.scss
@use 'sass:color'; // 推荐添加，以明确依赖

// 隐藏滚动条的全局样式
* {
  // 对于 Webkit 浏览器 (Chrome, Safari, Edge)
  &::-webkit-scrollbar {
    width: 0px;
    background: transparent;
  }

  &::-webkit-scrollbar-thumb {
    background: transparent;
  }

  // 对于 Firefox
  scrollbar-width: none;
  -ms-overflow-style: none; // 对于 IE/Edge
}

// 如果需要在特定元素上显示滚动条，可以使用这个类
.show-scrollbar {
  &::-webkit-scrollbar {
    width: 8px !important;
    background: rgba(255, 255, 255, 0.1) !important;
  }

  &::-webkit-scrollbar-thumb {
    background: rgba(255, 255, 255, 0.3) !important;
    border-radius: 4px !important;

    &:hover {
      background: rgba(255, 255, 255, 0.5) !important;
    }
  }

  scrollbar-width: thin !important;
  scrollbar-color: rgba(255, 255, 255, 0.3) rgba(255, 255, 255, 0.1) !important;
}

// 全局基础样式
html,
body {
  height: 100% !important;
  min-height: 100vh !important;
  min-height: 100dvh !important;
  width: 100% !important;
  margin: 0 !important;
  padding: 0 !important;
  background-color: #121218 !important; // 确保背景色一致
  overflow-x: hidden; // 防止水平滚动
}

// Edge-to-Edge 模式支持 - 注释掉以避免与背景 edge-to-edge 冲突
/*
@supports (padding: max(0px)) {
  body {
    // 确保内容可以延伸到安全区域
    padding-top: constant(safe-area-inset-top);
    padding-bottom: constant(safe-area-inset-bottom);
    padding-left: constant(safe-area-inset-left);
    padding-right: constant(safe-area-inset-right);

    // iOS 11.2+ 支持
    padding-top: env(safe-area-inset-top);
    padding-bottom: env(safe-area-inset-bottom);
    padding-left: env(safe-area-inset-left);
    padding-right: env(safe-area-inset-right);
  }
}
*/

// 移动端 Edge-to-Edge 模式样式
@media screen and (max-width: 768px) {
  html,
  body {
    // 确保占满整个屏幕
    height: 100vh !important;
    height: 100dvh !important; // 动态视口高度
    width: 100vw !important;

    // 移除任何默认的 padding/margin
    margin: 0 !important;
    padding: 0 !important;

    // 确保背景延伸到边缘
    background-color: #121218 !important;

    // 移动端的 Edge-to-Edge 支持
    -webkit-fill-available: 100%;
  }

  // 确保根元素也占满屏幕
  #q-app {
    height: 100vh !important;
    height: 100dvh !important;
    width: 100vw !important;
    background-color: #121218 !important;
  }
}

.q-layout {
  min-height: 100%; // 或者 height: 100%
  background-color: #121218; // 确保布局有背景色

  // 移动端 Edge-to-Edge 支持
  @media screen and (max-width: 768px) {
    min-height: 100vh !important;
    min-height: 100dvh !important;
    width: 100vw !important;

    // 确保内容可以延伸到状态栏和导航栏区域
    position: relative;
    overflow-x: hidden;
  }
}

#q-app {
  height: 100% !important;
  min-height: 100vh !important;
  min-height: 100dvh !important;
  width: 100% !important;
  background-color: #121218 !important; // 确保app容器有背景色
  display: flex;
  flex-direction: column;
  overflow-x: hidden; // 只隐藏水平滚动，保留垂直滚动

  // 移动端特殊处理
  @media screen and (max-width: 768px) {
    position: relative;
    overflow-x: hidden; // 只隐藏水平滚动，保留垂直滚动
  }
}

// Edge-to-Edge 模式专用样式类
.edge-to-edge {
  // 确保内容可以延伸到屏幕边缘
  width: 100vw !important;
  height: 100vh !important;
  height: 100dvh !important; // 动态视口高度

  // 重置所有边距和填充
  margin: 0 !important;
  padding: 0 !important;

  // 确保背景色延伸到边缘
  background-color: #121218 !important;

  // 移动端特定样式
  @media screen and (max-width: 768px) {
    // 确保延伸到状态栏区域
    padding-top: constant(safe-area-inset-top);
    padding-top: env(safe-area-inset-top);

    // 确保延伸到导航栏区域
    padding-bottom: constant(safe-area-inset-bottom);
    padding-bottom: env(safe-area-inset-bottom);

    // 左右边缘
    padding-left: constant(safe-area-inset-left);
    padding-left: env(safe-area-inset-left);
    padding-right: constant(safe-area-inset-right);
    padding-right: env(safe-area-inset-right);

    // 防止内容溢出
    overflow-x: hidden;
    position: relative;
  }
}

// 针对移动端的全屏模式
.mobile-fullscreen {
  @media screen and (max-width: 768px) {
    position: fixed !important;
    top: 0 !important;
    left: 0 !important;
    right: 0 !important;
    bottom: 0 !important;
    z-index: 1000;

    width: 100vw !important;
    height: 100vh !important;
    height: 100dvh !important;

    // 确保背景延伸到边缘
    background-color: #121218 !important;

    // 内容可以延伸到安全区域，但添加适当的内边距
    padding: env(safe-area-inset-top) env(safe-area-inset-right) env(safe-area-inset-bottom)
      env(safe-area-inset-left);
    box-sizing: border-box;
  }
}

// 定义一些可复用的辉光效果类
.neon-glow-primary {
  box-shadow:
    0 0 5px $primary,
    0 0 10px $primary,
    0 0 15px color.adjust($primary, $lightness: 10%),
    0 0 20px color.adjust($primary, $lightness: 20%);
  // animation: glow-animation 1.5s infinite alternate; // 可选的动画
}

.neon-text-primary {
  color: $primary;
  text-shadow:
    0 0 3px color.adjust($primary, $lightness: 20%),
    0 0 5px color.adjust($primary, $lightness: 30%);
}

// 斜切角边框的 mixin (示例)
@mixin skewed-border($skew-angle, $border-color, $border-width: 1px) {
  position: relative;
  &:before {
    content: '';
    position: absolute;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    z-index: -1; // Ensure pseudo-element is behind the content
    background: $border-color;
    transform: skewX($skew-angle);
  }
  > * {
    // Content needs to be above the pseudo-element
    position: relative;
    z-index: 1;
    background: $dark-page; // Or your content background color
    // The padding here simulates the border thickness by pushing content inward
    // For a true border effect on the skewed shape, it's more complex.
    // This approach effectively creates a skewed background behind the content.
    // Adjust padding as needed or use a different technique for true skewed borders on content.
    padding: $border-width;
  }
}

// Page Transition Animations
.slide-left-enter-active,
.slide-left-leave-active,
.slide-right-enter-active,
.slide-right-leave-active {
  transition:
    transform 0.3s ease-out,
    opacity 0.3s ease-out;
}

.slide-left-enter-from {
  opacity: 0;
  transform: translateX(100%);
}
.slide-left-leave-to {
  opacity: 0;
  transform: translateX(-100%);
}

.slide-right-enter-from {
  opacity: 0;
  transform: translateX(-100%);
}
.slide-right-leave-to {
  opacity: 0;
  transform: translateX(100%);
}

// Ensure router-view container allows for absolute positioning of transitioning views
// .q-page-container {
//   position: relative;
//   overflow-x: hidden; // Prevent horizontal scrollbars during transition
// }

// .q-page-container > .q-page {
//   position: absolute; // Needed for smooth transitions if pages overlap
//   width: 100%;
//   top: 0;
//   left: 0;
// }
