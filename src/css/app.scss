// src/css/app.scss
@use 'sass:color'; // 推荐添加，以明确依赖

// 尝试添加一些全局的科技感元素
html,
body {
  height: 100%;
  width: 100%;
  margin: 0;
  padding: 0;
  /* 移除 overflow: hidden 和 position: fixed，允许页面滚动 */
}

.q-layout {
  min-height: 100%; // 或者 height: 100%
}

#q-app {
  height: 100%;
  width: 100%;
  /* 移除 overflow: hidden，允许内容滚动 */
  display: flex; /* 如果 #q-app 内部直接是 QLayout，flex 可能不是必需的 */
  flex-direction: column; /* 如果使用 flex */
}
// 定义一些可复用的辉光效果类
.neon-glow-primary {
  box-shadow:
    0 0 5px $primary,
    0 0 10px $primary,
    0 0 15px color.adjust($primary, $lightness: 10%),
    0 0 20px color.adjust($primary, $lightness: 20%);
  // animation: glow-animation 1.5s infinite alternate; // 可选的动画
}

.neon-text-primary {
  color: $primary;
  text-shadow:
    0 0 3px color.adjust($primary, $lightness: 20%),
    0 0 5px color.adjust($primary, $lightness: 30%);
}

// 斜切角边框的 mixin (示例)
@mixin skewed-border($skew-angle, $border-color, $border-width: 1px) {
  position: relative;
  &:before {
    content: '';
    position: absolute;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    z-index: -1; // Ensure pseudo-element is behind the content
    background: $border-color;
    transform: skewX($skew-angle);
  }
  > * {
    // Content needs to be above the pseudo-element
    position: relative;
    z-index: 1;
    background: $dark-page; // Or your content background color
    // The padding here simulates the border thickness by pushing content inward
    // For a true border effect on the skewed shape, it's more complex.
    // This approach effectively creates a skewed background behind the content.
    // Adjust padding as needed or use a different technique for true skewed borders on content.
    padding: $border-width;
  }
}
